{"version":3,"sources":["components/Button-sorter.js","components/Button-filter-mobile.js","components/Breadcrumbs.js","components/Item-list-filter-keywords.js","components/Items-list-filter-size.js","components/Item-list-filter-priceBar.js"],"names":["ButtonSorter","props","state","dropdownShowNumberItemsOpen","dropdownSortOpen","optionsArray","this","dispatchToSortList","sortArgsForFilter","dropDownWithArrow","x","indexOf","src","alt","isOpen","toggle","setState","caret","color","map","onClick","Component","ButtonFilterMobile","modal","dispatchSize","gender","sortSizeForFilter","keywordsSelectAction","categoriesProducts","keywordsForFilter","actionPriceRangeFilter","reducerPriceRangeFilter","listLength","style","marginRight","className","Breadcrumbs","selectedCategory","backgroundColor","textColor","marginTop","showSortBtn","showFilterBtn","styles","containerPcScreen","height","display","justifyContent","alignItems","containerMobileScreen","sortBtnMobileScreen","linkColor","sortBtn","sm","size","offset","buttonLabel","genderLink","Link","to","charAt","toUpperCase","substr","selectedItem","length","isMobile","ItemsListFilterKeywords","componentDidMount","actionFillFilters","men","women","console","log","cat","categoriesProductslength","listStyleType","type","checked","category","includes","onChange","availableSizes","ItemsListFilterSize","outline","ProductListFilterPriceBar","max","step","value"],"mappings":"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","file":"static/js/1.2dda4a1c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, { Component, Fragment } from 'react'\r\nimport { \r\n  ButtonDropdown, \r\n  DropdownToggle, \r\n  DropdownMenu, \r\n  DropdownItem\r\n} from 'reactstrap';\r\n\r\nconst propTypes = {\r\n  dispatchToSortList: PropTypes.func.isRequired,\r\n  sortArgsForFilter: PropTypes.string.isRequired,\r\n};\r\n\r\nclass ButtonSorter extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dropdownShowNumberItemsOpen: false,\r\n      dropdownSortOpen: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { dispatchToSortList, sortArgsForFilter } = this.props\r\n    const { dropdownSortOpen } = this.state\r\n\r\n    const dropDownWithArrow = (x) => \r\n    x.indexOf(\"Asc\") > 0 ? \r\n    <Fragment><img src= \"/down-arrow.png\" alt=\"\" />{' '+x}</Fragment> :\r\n    <Fragment><img src= \"/up-arrow.png\" alt=\"\" />{' '+x}</Fragment>\r\n  \r\n\r\n    const eachDropDown = (optionsArray) => optionsArray.map(x=>( \r\n      <DropdownItem onClick={()=>dispatchToSortList(x)} key={x}>\r\n        {dropDownWithArrow(x)}\r\n      </DropdownItem>\r\n    ))\r\n\r\n    return (\r\n      <ButtonDropdown  isOpen={dropdownSortOpen} toggle={()=>this.setState({dropdownSortOpen: !dropdownSortOpen})}>\r\n        <DropdownToggle caret color=\"light\" >\r\n          Sort: {dropDownWithArrow(sortArgsForFilter)}\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          {eachDropDown(['titleAsc', 'titleDesc', 'priceAsc', 'priceDesc'])}\r\n        </DropdownMenu>\r\n      </ButtonDropdown>\r\n    );\r\n  };\r\n};\r\n\r\nButtonSorter.propTypes = propTypes;\r\n\r\nexport default ButtonSorter;","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport ItemsListFilterKeywords from './Item-list-filter-keywords'\r\nimport ItemsListFilterSize from './Items-list-filter-size'\r\nimport ItemListFilterPriceBar from './Item-list-filter-priceBar'\r\n\r\nconst propTypes = {\r\n  dispatchSize: PropTypes.func.isRequired,\r\n  gender: PropTypes.string.isRequired,\r\n  sortSizeForFilter: PropTypes.string.isRequired,\r\n  keywordsSelectAction: PropTypes.func.isRequired,\r\n  categoriesProducts: PropTypes.object.isRequired,\r\n  keywordsForFilter: PropTypes.array.isRequired,\r\n  actionPriceRangeFilter: PropTypes.func.isRequired,\r\n  reducerPriceRangeFilter: PropTypes.number.isRequired,\r\n  listLength: PropTypes.number.isRequired\r\n};\r\n\r\nclass ButtonFilterMobile extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false\r\n    };\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    const { \r\n      dispatchSize,\r\n      gender,\r\n      sortSizeForFilter, \r\n      keywordsSelectAction, \r\n      categoriesProducts,\r\n      keywordsForFilter,\r\n      actionPriceRangeFilter,\r\n      reducerPriceRangeFilter,\r\n      listLength\r\n    } = this.props;\r\n\r\n\r\n    return (\r\n      <div>\r\n        <Button color=\"danger\" style={{marginRight:'20px'}} onClick={this.toggle}>Filter the list</Button>\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n          <ModalHeader toggle={this.toggle}>Results: <b>{listLength}</b></ModalHeader>\r\n          <ModalBody>\r\n            <h4>Categories</h4>\r\n              <ItemsListFilterKeywords \r\n                gender={gender} \r\n                keywordsForFilter={keywordsForFilter}\r\n                keywordsSelectAction={keywordsSelectAction}\r\n                categoriesProducts={categoriesProducts}\r\n              />\r\n            <h4>Size</h4>\r\n              <ItemsListFilterSize \r\n                dispatchSize={dispatchSize} \r\n                sortSizeForFilter={sortSizeForFilter}\r\n              />\r\n            <h4>Price {`< ${reducerPriceRangeFilter}$`}</h4>    \r\n              <ItemListFilterPriceBar \r\n                actionPriceRangeFilter={actionPriceRangeFilter}\r\n                reducerPriceRangeFilter={reducerPriceRangeFilter}\r\n              />\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nButtonFilterMobile.propTypes = propTypes;\r\n\r\nexport default ButtonFilterMobile;","import PropTypes from 'prop-types';\r\nimport React, { Fragment } from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { isMobile } from \"react-device-detect\"; \r\nimport { Link } from 'react-router-dom';\r\nimport ButtonSorter from './Button-sorter';\r\nimport ButtonFilterMobile from './Button-filter-mobile';\r\n\r\n\r\nconst propTypes = {\r\n  gender: PropTypes.string,\r\n  selectedCategory: PropTypes.array,\r\n  backgroundColor: PropTypes.string,\r\n  textColor: PropTypes.string,\r\n  marginTop: PropTypes.number,\r\n  showSortBtn: PropTypes.bool,\r\n  showFilterBtn: PropTypes.bool,\r\n  dispatchToSortList: PropTypes.func,\r\n  sortArgsForFilter: PropTypes.string,\r\n  dispatchSize: PropTypes.func,\r\n  sortSizeForFilter: PropTypes.string,\r\n  keywordsSelectAction: PropTypes.func,\r\n  categoriesProducts: PropTypes.object,\r\n  keywordsForFilter: PropTypes.array,\r\n  actionPriceRangeFilter: PropTypes.func,\r\n  reducerPriceRangeFilter: PropTypes.number,\r\n  listLength: PropTypes.number,\r\n};\r\n\r\nconst Breadcrumbs = ({\r\n  gender, \r\n  selectedCategory, \r\n  backgroundColor, \r\n  textColor, \r\n  marginTop, \r\n  showSortBtn,\r\n  showFilterBtn, \r\n  dispatchToSortList, \r\n  sortArgsForFilter,\r\n  dispatchSize,\r\n  sortSizeForFilter,\r\n  keywordsSelectAction,\r\n  categoriesProducts,\r\n  keywordsForFilter,\r\n  actionPriceRangeFilter,\r\n  reducerPriceRangeFilter,\r\n  listLength\r\n}) => {\r\n\r\n  const styles= {\r\n    containerPcScreen: {\r\n      height: '80px',\r\n      backgroundColor: backgroundColor,\r\n      marginTop: marginTop,\r\n      color: textColor,\r\n      display: 'flex',\r\n      justifyContent: 'left',\r\n      alignItems: 'center'\r\n    },\r\n    containerMobileScreen: {\r\n      height: '100px',\r\n      backgroundColor: backgroundColor,\r\n      marginTop: marginTop,\r\n      color: textColor,\r\n      display: 'flex',\r\n      justifyContent: 'left',\r\n      alignItems: 'center'\r\n    },\r\n    sortBtnMobileScreen: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n    },\r\n    linkColor: {\r\n      color: textColor\r\n    }\r\n  }\r\n \r\n  const sortBtn = \r\n    showSortBtn && \r\n      <Col sm={{ size: 'auto', offset: 6 }} style={styles.sortBtnMobileScreen}>\r\n        {showFilterBtn &&\r\n          <ButtonFilterMobile \r\n            buttonLabel='Filter the list'\r\n            gender={gender}\r\n            dispatchSize={dispatchSize}\r\n            sortSizeForFilter={sortSizeForFilter}\r\n            keywordsSelectAction={keywordsSelectAction}\r\n            keywordsForFilter={keywordsForFilter}\r\n            categoriesProducts={categoriesProducts}\r\n            actionPriceRangeFilter={actionPriceRangeFilter}\r\n            reducerPriceRangeFilter={reducerPriceRangeFilter}\r\n            listLength={listLength}\r\n          /> \r\n        }  \r\n        <ButtonSorter \r\n          dispatchToSortList={dispatchToSortList} \r\n          sortArgsForFilter={sortArgsForFilter} \r\n        />\r\n      </Col>\r\n\r\n  const genderLink = gender && <Fragment><Link style={styles.linkColor} to={`/category/${gender}`}>{` ${gender && gender.charAt(0).toUpperCase() + gender.substr(1)}'s Apparels`}</Link> ></Fragment>; \r\n  const selectedItem = selectedCategory.length === 1 ? ' '+selectedCategory : selectedCategory.length > 1 ? ' Multiple criterias' : ' Category selection'      \r\n  return (\r\n    <div style={isMobile ? styles.containerMobileScreen : styles.containerPcScreen}>\r\n      <Container>\r\n        <Row>\r\n          <Col sm={{ size: 'auto'}}>\r\n            <div>\r\n              <Link style={styles.linkColor} to=\"/\">Home </Link> >\r\n              {genderLink}\r\n              <span>{selectedItem}</span>\r\n            </div>\r\n          </Col>\r\n            { sortBtn }\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nBreadcrumbs.propTypes = propTypes;\r\n\r\nexport default Breadcrumbs;\r\n","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react'\r\nimport '../style/checkbox.min.css'\r\n\r\nconst propTypes = {\r\n  gender: PropTypes.string.isRequired,\r\n  keywordsSelectAction: PropTypes.func.isRequired,\r\n  categoriesProducts: PropTypes.object.isRequired,\r\n  keywordsForFilter: PropTypes.array.isRequired\r\n};\r\n\r\nclass ItemsListFilterKeywords extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      cat: this.props.categoriesProductslength === 0\r\n    }\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    const { keywordsForFilter, actionFillFilters, categoriesProducts, gender } = this.props\r\n    keywordsForFilter.length === 0 ? \r\n      gender === 'men' ? (() => {actionFillFilters(categoriesProducts.men)})() : (() => {actionFillFilters(categoriesProducts.women)})() \r\n      : console.log('gender err')\r\n  };\r\n\r\n  render(){\r\n    \r\n    const {   \r\n      categoriesProducts,\r\n      keywordsSelectAction, \r\n      keywordsForFilter,\r\n      gender \r\n    } = this.props;\r\n\r\n    const cat = () =>  gender === 'men' ? categoriesProducts.men : categoriesProducts.women;\r\n    \r\n    const stateIncludesCategory = category => keywordsForFilter.includes(category);\r\n\r\n    return (\r\n      cat().map(x=>\r\n        <li style={{listStyleType: 'none'}} key={x}>\r\n        <div className=\"pretty p-default p-smooth\">\r\n          {/* Empty onChange to avoid unrelevant msg error */}\r\n          <input type=\"checkbox\" onClick={()=>keywordsSelectAction(x)} checked={stateIncludesCategory(x)} onChange={()=>{}}/>\r\n          <div className=\"state p-success-o\">\r\n              <label>{x}</label>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      )\r\n    );\r\n\r\n  };\r\n}; \r\n\r\nItemsListFilterKeywords.propTypes = propTypes;\r\n\r\nexport default ItemsListFilterKeywords;\r\n\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst propTypes = {\r\n  dispatchSize: PropTypes.func.isRequired,\r\n  sortSizeForFilter: PropTypes.string.isRequired\r\n};\r\n\r\nconst availableSizes = ['All', 'XL', 'L', 'M', 'S', 'XS'];\r\n\r\nconst ItemsListFilterSize = ({dispatchSize, sortSizeForFilter}) => availableSizes.map(x=><Button outline={sortSizeForFilter !== x} color=\"secondary\" onClick={()=> dispatchSize(x)} key={x}>{x}</Button>);\r\n\r\nItemsListFilterSize.propTypes = propTypes;\r\n\r\nexport default ItemsListFilterSize;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport Slider from 'react-rangeslider';\r\nimport '../style/rangeslider.min.css';\r\n \r\nconst propTypes = {\r\n  actionPriceRangeFilter: PropTypes.func.isRequired,\r\n  reducerPriceRangeFilter: PropTypes.number.isRequired,\r\n};\r\n\r\nconst styles = {\r\n  display: 'flex',\r\n  justifyContent: 'space-around'\r\n};\r\n\r\nconst ProductListFilterPriceBar = ({\r\n  actionPriceRangeFilter, \r\n  reducerPriceRangeFilter\r\n}) => (\r\n    <div>\r\n      <Slider\r\n        max={200}\r\n        step={1}\r\n        value={reducerPriceRangeFilter}\r\n        onChange={actionPriceRangeFilter}\r\n      />\r\n      <div style={styles}>\r\n        <span>\r\n          min \r\n        </span>\r\n        <span>\r\n          max\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\nProductListFilterPriceBar.propTypes = propTypes;\r\n\r\nexport default ProductListFilterPriceBar;"],"sourceRoot":""}