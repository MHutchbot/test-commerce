{"version":3,"sources":["components/Button-size-select.js","components/Button-add-to-cart.js","components/Checkout-modal.js","components/Buttons-color-select.js","components/Carousel-item.js","components/Item.js","containers/Item-container.js","actions/CartActions.js"],"names":["ButtonSizeSelect","props","toggle","setState","prevState","dropdownOpen","state","this","handleSizeSelection","sizesArray","selectedSize","validateSizeSelection","dropDownList","map","x","onClick","isOpen","caret","outline","color","length","Component","ButtonAddToCart","addToCart","sizeBtn","infoItem","selectedColor","toggleModal","validateColorSelection","colorSelectionMissingRemark","sizeSelectionMissingRemark","colorBtn","size","CheckoutModal","openModal","totalItemsSelectorStats","xs","src","images","style","width","alt","title","price","Link","to","className","styles","backgroundColor","margin","height","display","cursor","boxShadow","ButtonsColorSelect","colors","handleColorSelection","items","altText","caption","CarouselItemPage","onExiting","animating","onExited","next","nextIndex","activeIndex","imgsArray","previous","goToIndex","newIndex","slides","index","onClickHandler","direction","directionText","marginTop","Item","selectedImage","loading","errorFetching","tags","undefined","thumbnailsBrowersView","padding","onMouseEnter","MainImageBrowserView","MainImageMobileView","Breadcrumbs","selectedCategory","textColor","paddingTop","paddingBottom","md","isBrowser","rating","starDimension","starSpacing","starRatedColor","numberOfStars","name","description","ItemContainer","componentDidMount","fetchItemApi","match","params","id","remark","render","connect","itemFetchDataSuccess","itemIsLoading","itemHasErrorm","selectorTotalItemsCart","dispatch","url","item","type","ADD_TO_CART","deleteFromCart","DELETE_FROM_CART","deleteALlFromCart","DELETE_ALL_FROM_CART"],"mappings":"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","file":"static/js/10.a28176eb.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\n\r\nconst propTypes = {\r\n  handleSizeSelection: PropTypes.func.isRequired,\r\n  sizesArray: PropTypes.array.isRequired,\r\n  selectedSize: PropTypes.string.isRequired,\r\n  validateSizeSelection: PropTypes.func.isRequired\r\n};\r\n\r\nclass ButtonSizeSelect extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dropdownOpen: false\r\n    };\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState(prevState => ({\r\n      dropdownOpen: !prevState.dropdownOpen\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { handleSizeSelection, sizesArray, selectedSize, validateSizeSelection} = this.props;\r\n    const dropDownList = sizesArray.map(x=>\r\n      <DropdownItem key={x} onClick={()=>{return (handleSizeSelection(x), validateSizeSelection('valid'))}}>{x}</DropdownItem>\r\n    );\r\n    return (\r\n      <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n        <DropdownToggle caret outline color='secondary'>\r\n          Size: {selectedSize.length>0 ? selectedSize : 'Click to choose'}\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          {dropDownList}\r\n        </DropdownMenu>\r\n      </Dropdown>\r\n    );\r\n  };\r\n};\r\n\r\nButtonSizeSelect.propTypes = propTypes;\r\n\r\nexport default ButtonSizeSelect;","import PropTypes from 'prop-types';\r\nimport React, { Fragment } from 'react';\r\nimport { \r\n  Button\r\n} from 'reactstrap';\r\n\r\nconst propTypes = {\r\n  addToCart: PropTypes.func.isRequired,\r\n  sizeBtn: PropTypes.string.isRequired,\r\n  infoItem: PropTypes.object.isRequired,\r\n  selectedSize: PropTypes.string.isRequired,\r\n  selectedColor: PropTypes.string.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n  validateSizeSelection: PropTypes.func.isRequired,\r\n  validateColorSelection: PropTypes.func.isRequired,\r\n  colorSelectionMissingRemark: PropTypes.string.isRequired,\r\n  sizeSelectionMissingRemark: PropTypes.string.isRequired\r\n};\r\n\r\nconst ButtonAddToCart = ({\r\n  addToCart,\r\n  sizeBtn,\r\n  infoItem,\r\n  selectedSize,\r\n  selectedColor,\r\n  toggleModal,\r\n  validateSizeSelection,\r\n  validateColorSelection,\r\n  colorSelectionMissingRemark,\r\n  sizeSelectionMissingRemark\r\n}) => {\r\n  \r\n  const colorBtn = (colorSelectionMissingRemark.length > 0 || sizeSelectionMissingRemark.length > 0) ? 'danger' : 'success'\r\n\r\n  return (\r\n    <Fragment>\r\n      <Button color={colorBtn} size={sizeBtn} onClick={()=>{ return(\r\n        selectedSize.length < 1 && validateSizeSelection('Please, select a size'),\r\n        selectedColor.length < 1 && validateColorSelection('Please, select a color'),\r\n        selectedSize.length > 0 && selectedColor.length > 0 && addToCart({...infoItem, selectedSize, selectedColor}) && toggleModal()\r\n      )}}>Add to Cart</Button> \r\n    </Fragment>\r\n\r\n);};\r\n\r\nButtonAddToCart.propTypes = propTypes;\r\n\r\nexport default ButtonAddToCart;\r\n\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { \r\n  Button, \r\n  Modal, \r\n  ModalHeader, \r\n  ModalBody, \r\n  ModalFooter,\r\n  Col,\r\n  Row \r\n} from 'reactstrap'\r\n\r\nconst propTypes = {\r\n  infoItem: PropTypes.object.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n  selectedSize: PropTypes.string.isRequired,\r\n  selectedColor: PropTypes.string.isRequired,\r\n  openModal: PropTypes.bool.isRequired,\r\n  totalItemsSelectorStats: PropTypes.number.isRequired\r\n};\r\n\r\nconst CheckoutModal = ({\r\n  infoItem,\r\n  openModal,\r\n  toggleModal,\r\n  selectedSize,\r\n  selectedColor,\r\n  totalItemsSelectorStats\r\n}) => (\r\n  <Modal isOpen={openModal} toggle={toggleModal} >\r\n    <ModalHeader toggle={toggleModal}>You have {totalItemsSelectorStats} item{totalItemsSelectorStats>1 && 's'} in your cart</ModalHeader>\r\n    <ModalBody>\r\n      {totalItemsSelectorStats>1 && 'last item added:'}\r\n      <Row>\r\n        <Col xs=\"6\"><img src={infoItem.images[0]} style={{width: '100%'}} alt=\"\" /> </Col>\r\n        <Col xs=\"6\">\r\n          <b>{infoItem.title}</b>\r\n          <div>{infoItem.price} $</div>\r\n          <div>color: {selectedColor}</div>\r\n          <div>size: {selectedSize}</div>\r\n        </Col>\r\n      </Row>\r\n    </ModalBody>\r\n    <ModalFooter>\r\n      <Link to=\"/cart\" className=\"text-white\"> <Button outline color='secondary' onClick={toggleModal}>Edit cart</Button></Link>{' '}\r\n      <Link to=\"/checkout\" className=\"text-white\"> <Button color='secondary' onClick={toggleModal}>Checkout</Button></Link>\r\n    </ModalFooter>\r\n  </Modal>\r\n);\r\n\r\nCheckoutModal.propTypes = propTypes;\r\n\r\nexport default CheckoutModal;","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst propTypes = {\r\n  colors: PropTypes.array.isRequired,\r\n  selectedColor: PropTypes.string.isRequired,\r\n  handleColorSelection: PropTypes.func.isRequired,\r\n  validateColorSelection: PropTypes.func.isRequired,\r\n};\r\n\r\nconst styles = (x, selectedColor) => ({\r\n  backgroundColor: x, \r\n  margin:'3px', \r\n  width: '30px', \r\n  height: '30px', \r\n  display: 'inline-block',\r\n  cursor: 'pointer',\r\n  boxShadow: x === selectedColor ? '0px 0px 6px 1px rgba(0,0,0,1)' : '0px 0px 2px 1px rgba(0,0,0,1)' \r\n});\r\n\r\nconst ButtonsColorSelect = ({ colors, handleColorSelection, selectedColor, validateColorSelection }) => (\r\n  colors.map(x => <div key={x} onClick={()=>{return (handleColorSelection(x), validateColorSelection('valid'))}} style={styles(x, selectedColor)} />)\r\n);\r\n\r\nButtonsColorSelect.propTypes = propTypes;\r\n\r\nexport default ButtonsColorSelect;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Carousel,\r\n  CarouselItem,\r\n  CarouselControl,\r\n  CarouselIndicators\r\n} from 'reactstrap';\r\n\r\nconst items = [\r\n  {\r\n    src: 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa1d%20text%20%7B%20fill%3A%23555%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa1d%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23777%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22285.921875%22%20y%3D%22218.3%22%3EFirst%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',\r\n    altText: 'Slide 1',\r\n    caption: 'Slide 1'\r\n  },\r\n  {\r\n    src: 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa20%20text%20%7B%20fill%3A%23444%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa20%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23666%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22247.3203125%22%20y%3D%22218.3%22%3ESecond%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',\r\n    altText: 'Slide 2',\r\n    caption: 'Slide 2'\r\n  },\r\n  {\r\n    src: 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa21%20text%20%7B%20fill%3A%23333%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa21%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23555%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22277%22%20y%3D%22218.3%22%3EThird%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',\r\n    altText: 'Slide 3',\r\n    caption: 'Slide 3'\r\n  }\r\n];\r\n\r\nclass CarouselItemPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { activeIndex: 0 };\r\n  }\r\n\r\n  onExiting = () => {\r\n    this.animating = true;\r\n  }\r\n\r\n  onExited = () => {\r\n    this.animating = false;\r\n  }\r\n\r\n  next = () => {\r\n    if (this.animating) return;\r\n    const nextIndex = this.state.activeIndex === this.props.imgsArray.length - 1 ? 0 : this.state.activeIndex + 1;\r\n    this.setState({ activeIndex: nextIndex });\r\n  }\r\n\r\n  previous = () => {\r\n    if (this.animating) return;\r\n    const nextIndex = this.state.activeIndex === 0 ? this.props.imgsArray.length - 1 : this.state.activeIndex - 1;\r\n    this.setState({ activeIndex: nextIndex });\r\n  }\r\n\r\n  goToIndex = (newIndex) => {\r\n    if (this.animating) return;\r\n    this.setState({ activeIndex: newIndex });\r\n  }\r\n\r\n  render() {\r\n    const { activeIndex } = this.state;\r\n\r\n    const slides = this.props.imgsArray.map((x, index) => {\r\n      return (\r\n        <CarouselItem\r\n          onExiting={this.onExiting}\r\n          onExited={this.onExited}\r\n          key={index}\r\n        >\r\n          <img style={{width: '100%', height: '350px'}} src={x} alt={x} />\r\n        </CarouselItem>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Carousel\r\n        activeIndex={activeIndex}\r\n        next={this.next}\r\n        previous={this.previous}\r\n      >\r\n        <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={this.goToIndex} />\r\n        {slides}\r\n        <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={this.previous} />\r\n        <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={this.next} />\r\n      </Carousel>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default CarouselItemPage;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport { isBrowser } from \"react-device-detect\";\r\nimport Breadcrumbs from \"./Breadcrumbs\";\r\nimport { Col, Row, Container } from \"reactstrap\";\r\nimport StarRatings from \"react-star-ratings\";\r\nimport ButtonSizeSelect from \"./Button-size-select\";\r\nimport ButtonAddToCart from \"./Button-add-to-cart\";\r\nimport CheckoutModal from \"./Checkout-modal\";\r\nimport ButtonsColorSelect from \"./Buttons-color-select\";\r\nimport CarouselItemPage from \"./Carousel-item\";\r\n\r\nconst propTypes = {\r\n  infoItem: PropTypes.array.isRequired,\r\n  addToCart: PropTypes.func.isRequired,\r\n  selectedSize: PropTypes.string.isRequired,\r\n  selectedColor: PropTypes.string.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  errorFetching: PropTypes.bool,\r\n  handleSizeSelection: PropTypes.func.isRequired,\r\n  handleColorSelection: PropTypes.func.isRequired,\r\n  totalItemsSelectorStats: PropTypes.number.isRequired\r\n};\r\n\r\nconst styles = {\r\n  marginTop: \"20px\"\r\n};\r\n\r\nclass Item extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedImage: 0,\r\n      openModal: false\r\n    };\r\n  }\r\n\r\n  toggleModal = () => this.setState({ openModal: !this.state.openModal });\r\n\r\n  render() {\r\n    const {\r\n      infoItem,\r\n      loading,\r\n      errorFetching,\r\n      addToCart,\r\n      handleSizeSelection,\r\n      handleColorSelection,\r\n      validateSizeSelection,\r\n      validateColorSelection,\r\n      selectedSize,\r\n      selectedColor,\r\n      totalItemsSelectorStats,\r\n      colorSelectionMissingRemark,\r\n      sizeSelectionMissingRemark\r\n    } = this.props;\r\n\r\n    const { selectedImage } = this.state;\r\n\r\n    if (errorFetching) {\r\n      return <p>Sorry! There was an error loading the items</p>;\r\n    }\r\n\r\n    const { size, images, color, tags } = infoItem;\r\n    if (\r\n      loading ||\r\n      size === undefined ||\r\n      images === undefined ||\r\n      color === undefined ||\r\n      tags === undefined\r\n    ) {\r\n      return <div style={{ height: \"1000px\" }} />;\r\n    }\r\n    const thumbnailsBrowersView = infoItem.images.map((x, index) => (\r\n      <div key={x} style={{ padding: \"5px\" }}>\r\n        <img\r\n          onMouseEnter={() => this.setState({ selectedImage: index })}\r\n          src={infoItem.images[index]}\r\n          alt=\"Smiley face\"\r\n          width=\"50px\"\r\n          height=\"70px\"\r\n          style={{cursor: 'pointer'}}\r\n        />\r\n      </div>\r\n    ));\r\n    const MainImageBrowserView = (\r\n      <img\r\n        src={infoItem.images[selectedImage]}\r\n        alt=\"Smiley face\"\r\n        width=\"100%\"\r\n      />\r\n    );\r\n    const MainImageMobileView = (\r\n      <CarouselItemPage imgsArray={infoItem.images} />\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Breadcrumbs\r\n          selectedCategory={infoItem.tags}\r\n          backgroundColor={\"white\"}\r\n          textColor={\"black\"}\r\n        />\r\n        <Container style={{paddingTop:'50px', paddingBottom:'80px'}}>\r\n          <Row>\r\n            <Col md=\"1\">{isBrowser && thumbnailsBrowersView}</Col>\r\n            <Col md=\"6\">\r\n              {isBrowser ? MainImageBrowserView : MainImageMobileView}\r\n            </Col>\r\n            <Col md=\"5\">\r\n              <h1>{infoItem.title}</h1>\r\n              <div>{infoItem.price} $</div>\r\n              <StarRatings\r\n                rating={infoItem.rating}\r\n                starDimension=\"15px\"\r\n                starSpacing=\"1px\"\r\n                starRatedColor=\"#072a48\"\r\n                // changeRating={this.changeRating}\r\n                numberOfStars={5}\r\n                name=\"rating\"\r\n              />\r\n              <div style={styles}>\r\n                <ButtonSizeSelect\r\n                  style={styles}\r\n                  sizesArray={infoItem.size}\r\n                  infoItem={infoItem}\r\n                  handleSizeSelection={handleSizeSelection}\r\n                  selectedSize={selectedSize}\r\n                  validateSizeSelection={validateSizeSelection}\r\n                />\r\n                {sizeSelectionMissingRemark.length > 0 ? (\r\n                  <b style={{ color: \"red\" }}>*{sizeSelectionMissingRemark}</b>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n              <div style={styles}>\r\n                <p>\r\n                  Selected color:{\" \"}\r\n                  {selectedColor === \"\" ? <i>Choose below</i> : selectedColor}\r\n                </p>\r\n                <ButtonsColorSelect\r\n                  colors={infoItem.color}\r\n                  handleColorSelection={handleColorSelection}\r\n                  selectedColor={selectedColor}\r\n                  validateColorSelection={validateColorSelection}\r\n                />\r\n                {colorSelectionMissingRemark.length > 0 ? (\r\n                  <b style={{ color: \"red\" }}>*{colorSelectionMissingRemark}</b>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n              <div style={styles}>\r\n                <ButtonAddToCart\r\n                  sizeBtn=\"lg\"\r\n                  addToCart={addToCart}\r\n                  infoItem={infoItem}\r\n                  selectedSize={selectedSize}\r\n                  selectedColor={selectedColor}\r\n                  toggleModal={this.toggleModal}\r\n                  validateSizeSelection={validateSizeSelection}\r\n                  validateColorSelection={validateColorSelection}\r\n                  colorSelectionMissingRemark={colorSelectionMissingRemark}\r\n                  sizeSelectionMissingRemark={sizeSelectionMissingRemark}\r\n                />\r\n              </div>\r\n              <CheckoutModal\r\n                openModal={this.state.openModal}\r\n                toggleModal={this.toggleModal}\r\n                infoItem={infoItem}\r\n                totalItemsSelectorStats={totalItemsSelectorStats}\r\n                selectedSize={selectedSize}\r\n                selectedColor={selectedColor}\r\n              />\r\n              <p style={{ paddingTop: \"30px\" }}>Description:</p>\r\n              <p>{infoItem.description}</p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nItem.propTypes = propTypes;\r\n\r\nexport default Item;\r\n","import React, { Component } from 'react';\r\nimport { fetchItemApi } from '../actions/DataFetchingActions';\r\nimport { addToCart } from '../actions/CartActions';\r\nimport { connect } from 'react-redux';\r\nimport { selectorTotalItemsCart } from '../selectors/selector_list_statistics';\r\nimport Item from '../components/Item';\r\n\r\nclass ItemContainer extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      selectedSize: '',\r\n      selectedColor: '',\r\n      sizeSelectionMissingRemark: '',\r\n      colorSelectionMissingRemark: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => this.props.fetchItemApi(`/api/productsdata/${this.props.match.params.id}`);\r\n\r\n  handleSizeSelection = selectedSize => this.setState({ selectedSize });\r\n\r\n  handleColorSelection = selectedColor => this.setState({ selectedColor });\r\n\r\n  validateSizeSelection = remark => remark === 'valid' ? this.setState({ sizeSelectionMissingRemark: '' }) : this.setState({ sizeSelectionMissingRemark: remark });\r\n\r\n  validateColorSelection = remark => remark === 'valid' ? this.setState({ colorSelectionMissingRemark: '' }) : this.setState({ colorSelectionMissingRemark: remark }); \r\n\r\n  render = () => <Item {...this.props} {...this.state} handleSizeSelection={this.handleSizeSelection} handleColorSelection={this.handleColorSelection} validateSizeSelection={this.validateSizeSelection} validateColorSelection={this.validateColorSelection} />;\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  infoItem: state.itemFetchDataSuccess,\r\n  loading: state.itemIsLoading,\r\n  errorFetching: state.itemHasErrorm,\r\n  totalItemsSelectorStats: selectorTotalItemsCart(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchItemApi: url => dispatch(fetchItemApi(url)),\r\n  addToCart: x => dispatch(addToCart(x))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemContainer);\r\n\r\n","import { \r\n\tADD_TO_CART, \r\n\tDELETE_FROM_CART,\r\n\tDELETE_ALL_FROM_CART\r\n} from '../constants'; \r\n\r\nexport const addToCart = item => ({\r\n\ttype: ADD_TO_CART,\r\n\titem\t\r\n});\r\n\r\nexport const deleteFromCart = item => ({\r\n\ttype: DELETE_FROM_CART,\r\n\titem\r\n});\r\n\r\nexport const deleteALlFromCart = item => ({\r\n\ttype: DELETE_ALL_FROM_CART,\r\n\titem\r\n});"],"sourceRoot":""}