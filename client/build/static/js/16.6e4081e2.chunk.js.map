{"version":3,"sources":["components/Checkout-step-one.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Checkout-step-two.js","components/Checkout-step-three.js","components/Checkout-mini-summary.js","components/Checkout.js","containers/Checkout-container.js","actions/UsersActions.js"],"names":["CheckoutStepOne","styles","email","step1","toggle","stepsUnlock","emailIsValid","handleEmailValidation","onChangeEmail","emailValidation","test","String","toLowerCase","disabled","style","collapsePannel","collapasePannelTitle","onClick","color","pill","size","isOpen","for","md","invalid","type","name","id","placeholder","value","onChange","xs","margin","label","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","unsupportedIterableToArray","TypeError","CheckoutStepTwo","step2","step2Unlock","onChangeFirstName","onChangeLastName","onChangeCountry","onChangeCity","onChangeProvince","onChangePostalCode","onChangePhoneNumber","onChangeAdress1","onChangeAdress2","onChangeShipppingMethod","firstName","lastName","country","city","province","postalCode","phoneNumber","address1","address2","shippingMethod","formValidator","formIsValid","addUserAddress","validatorClient","formFieldsSpace","check","checked","className","Set","entries","map","sort","x","warningValidator","CheckoutStepThree","step3","step3Unlock","getUserAddress","onSubmitOrder","selectorTotalAmountCart","totalDelivery","CheckoutMiniSummary","getCart","quantity","title","price","_id","fontSize","container","paddingTop","paddingBottom","h1","borderBottom","cursor","CheckoutContainer","flush","props","e","setState","target","Number","step","state","ref","Math","random","toString","substring","Date","now","axios","post","customerinfo","order","idItem","titleItem","selectedSize","selectedColor","totalAmount","catch","error","console","log","Checkout","this","Component","connect","cartReducer","dispatch","infoUser","USER_ADDRESS"],"mappings":"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","file":"static/js/16.6e4081e2.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react'\nimport { \n  Row, \n  Col, \n  Input, \n  Badge, \n  Button, \n  ListGroupItem, \n  Collapse, \n  Label, \n  CustomInput, \n  FormFeedback\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nconst propTypes = {\n  email: PropTypes.string.isRequired, \n  step1: PropTypes.bool.isRequired, \n  toggle: PropTypes.func.isRequired,\n  stepsUnlock: PropTypes.func.isRequired,\n  onChangeEmail: PropTypes.func.isRequired,\n  emailIsValid: PropTypes.bool.isRequired,\n  handleEmailValidation: PropTypes.func.isRequired,\n  emailIsValid: PropTypes.bool.isRequired,\n};\n\nconst CheckoutStepOne = ({\n  styles, \n  email,\n  step1,\n  toggle,\n  stepsUnlock,\n  emailIsValid,\n  handleEmailValidation,\n  onChangeEmail\n}) => {\n  const emailValidation = (/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i).test(String(email).toLowerCase())\n  return (\n    <ListGroupItem disabled={!step1} style={styles.collapsePannel}>\n      <h3 style={styles.collapasePannelTitle} onClick={()=>toggle('step1')} >\n        <Badge color=\"secondary\" pill size='sm'>1</Badge>  Customer\n      </h3>\n      <Collapse isOpen={step1}>\n      <p>Enter your email for express checkout, an email will be sent to you allowing account creation</p>\n      <Label for=\"exampleEmail\">Email</Label>\n      <Row>\n        <Col md=\"6\">\n          <Input \n            invalid={!emailIsValid}  \n            type=\"email\" \n            name=\"email\" \n            id=\"exampleEmail\" \n            placeholder=\"example@gmail.com\" \n            value={email} \n            onChange={onChangeEmail}\n          />\n          <FormFeedback>\n            Email is not valid\n          </FormFeedback>\n        </Col>\n        <Col md=\"6\">\n          <Button disabled={false} onClick={()=>{\n            if (emailValidation) { \n              stepsUnlock('step2');\n              handleEmailValidation(true) \n            } else {\n              handleEmailValidation(false)\n            }\n            }}>Continue</Button>\n        </Col>\n        <Col xs=\"12\">\n        <div style={{margin: '20px'}}>\n          <CustomInput type=\"checkbox\" id=\"exampleCustomCheckbox\" label=\"Suscribe to our newsletter\" />\n        </div>\n        </Col>\n      </Row>\n      </Collapse>\n    </ListGroupItem>\n  )\n}\n\nCheckoutStepOne.propTypes = propTypes;\n\nexport default CheckoutStepOne\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { \n  Row, \n  Col, \n  Input, \n  Badge, \n  Button, \n  ListGroupItem, \n  Collapse, \n  Label, \n  Alert,\n  FormGroup\n} from 'reactstrap';\n\nconst propTypes = {\n  addUserAddress: PropTypes.func.isRequired,\n  step2: PropTypes.bool.isRequired,  \n  step2Unlock: PropTypes.bool.isRequired, \n  firstName: PropTypes.string.isRequired, \n  lastName: PropTypes.string.isRequired, \n  country: PropTypes.string.isRequired, \n  city: PropTypes.string.isRequired, \n  province: PropTypes.string.isRequired, \n  postalCode: PropTypes.number.isRequired, \n  phoneNumber: PropTypes.number.isRequired, \n  address1: PropTypes.string.isRequired, \n  address2: PropTypes.string.isRequired, \n  shippingMethod: PropTypes.number.isRequired,\n  formIsValid: PropTypes.bool.isRequired,\n  onChangeFirstName: PropTypes.func.isRequired,\n  onChangeLastName: PropTypes.func.isRequired,\n  onChangeCountry: PropTypes.func.isRequired,\n  onChangeCity: PropTypes.func.isRequired,\n  onChangeProvince: PropTypes.func.isRequired,\n  onChangePostalCode: PropTypes.func.isRequired,\n  onChangePhoneNumber: PropTypes.func.isRequired,\n  onChangeAdress1: PropTypes.func.isRequired,\n  onChangeAdress2: PropTypes.func.isRequired,\n  onChangeShipppingMethod: PropTypes.func.isRequired,\n  toggle: PropTypes.func.isRequired,\n  stepsUnlock: PropTypes.func.isRequired,\n  formValidator: PropTypes.func.isRequired\n};\n\nconst CheckoutStepTwo = ({\n  styles,\n  step2,\n  step2Unlock,\n  toggle,\n  stepsUnlock,\n  onChangeFirstName,\n  onChangeLastName,\n  onChangeCountry,\n  onChangeCity,\n  onChangeProvince,\n  onChangePostalCode,\n  onChangePhoneNumber,\n  onChangeAdress1,\n  onChangeAdress2,\n  onChangeShipppingMethod,\n  firstName,\n  lastName,\n  country,\n  city,\n  province,\n  postalCode,\n  phoneNumber,\n  address1,\n  address2,\n  shippingMethod,\n  formValidator,\n  formIsValid,\n  addUserAddress\n}) => {\n\n  const validatorClient = {\n    firstName: firstName.length > 2 && typeof firstName === 'string',\n    lastName: lastName.length > 2 && typeof lastName === 'string',\n    country: typeof country === 'string',\n    city: city.length > 2 && typeof city === 'string',\n    province: province.length > 2 && typeof province === 'string',\n    postalCode: typeof postalCode === 'number',\n    phoneNumber: typeof phoneNumber === 'number',\n    address1: address1.length > 2 && typeof address1 === 'string'\n  } \n\n  const warningValidator = (x) => {\n    if(x) {\n      if([...new Set(Object.entries(validatorClient).map(([k, v]) => (v)))].sort()[0] === false){\n        return(\n          <Row>\n            <Alert color=\"danger\">\n            Please fill these fields correctly:\n              {!validatorClient.firstName && <div>First Name</div>}\n              {!validatorClient.lastName && <div>Last Name</div>}\n              {!validatorClient.country && <div>Country</div>}\n              {!validatorClient.city && <div>City</div>}\n              {!validatorClient.province && <div>Province</div>}\n              {!validatorClient.postalCode && <div>Postal Code</div>}\n              {!validatorClient.phoneNumber && <div>Phone Number</div>}\n              {!validatorClient.address1 && <div>Address1 field</div>}\n            </Alert>\n          </Row>\n        )\n      } else {\n        return(\n          <Alert color=\"success\">\n            Thank you! Click 'continue'\n          </Alert>\n        )\n      }\n    } \n  }\n\n  return (\n    <div style={styles.collapsePannel}>\n    <ListGroupItem disabled={!step2}>\n    <h3 style={styles.collapasePannelTitle} onClick={()=>step2Unlock && toggle('step2')}>\n      <Badge color=\"secondary\" pill size='sm'>2</Badge>  Shipping {}\n    </h3>\n    <Collapse isOpen={step2}>\n      <Row>\n        <Col md={6} style={styles.formFieldsSpace}>\n          <Label for=\"First name\">First name</Label>\n          <Input type='text' onChange={onChangeFirstName} value={firstName} />\n        </Col>\n        <Col md={6} style={styles.formFieldsSpace}>\n          <Label for=\"exampleEmail\">last Name</Label>\n          <Input type='text' onChange={onChangeLastName} value={lastName} />\n        </Col>\n        <Col md={12} style={styles.formFieldsSpace}>\n          <Label for=\"exampleSelect\">Country</Label>\n          <Input type=\"select\" name=\"select\" onChange={onChangeCountry} value={country}>\n            <option value='USA'>USA</option>\n            <option value='UK'>UK</option>\n            <option value='FRANCE'>FRANCE</option>\n            <option value='GERMANY'>GERMANY</option>\n            <option value='AUSTRALIA'>AUSTRALIA</option>\n          </Input>\n        </Col>\n        <Col md={6} style={styles.formFieldsSpace}>\n          <Label>City</Label>\n          <Input type='text' onChange={onChangeCity} value={city} />\n        </Col>\n        <Col md={6} style={styles.formFieldsSpace}>\n          <Label>State/Province</Label>\n          <Input type='text' onChange={onChangeProvince} value={province} />\n        </Col>\n        <Col md={6} style={styles.formFieldsSpace}>\n          <Label>Postal Code</Label>\n          <Input type='number' onChange={onChangePostalCode} value={postalCode} />\n        </Col>\n        <Col md={6} style={styles.formFieldsSpace}>\n          <Label>Phone Number</Label>\n          <Input type='number' onChange={onChangePhoneNumber} value={phoneNumber} />\n        </Col>\n        <Col md={12} style={styles.formFieldsSpace}>\n          <Label for=\"Address1\">Address1</Label>\n          <Input type='text' onChange={onChangeAdress1} value={address1} />\n        </Col>\n        <Col md={12} style={styles.formFieldsSpace}>\n          <Label>Address2</Label>\n          <Input type='text' onChange={onChangeAdress2} value={address2} />\n        </Col>\n        <Col xs={6} style={styles.formFieldsSpace}>\n          <FormGroup style={styles.formFieldsSpace}>\n            <Label for=\"exampleCheckbox\" ><u>Shipping Method</u></Label>\n            <FormGroup check>\n              <Label check>\n                <Input type=\"radio\" onChange={()=>onChangeShipppingMethod(1)} checked={shippingMethod === 1} />{' '}\n                express (2 days shipping)\n              </Label>\n            </FormGroup>\n            <FormGroup check disabled>\n              <Label check>\n                <Input type=\"radio\" onChange={()=>onChangeShipppingMethod(2)} checked={shippingMethod === 2} />{' '}\n                1 week shipping\n              </Label>\n            </FormGroup>\n          </FormGroup>\n        </Col>\n        <div className='d-flex align-items-center'>\n          <Button disabled={false} onClick={()=>{\n              if([...new Set(Object.entries(validatorClient).map(([k, v]) => (v)))].sort()[0]){\n                return stepsUnlock('step3'), addUserAddress({\n                  firstName,\n                  lastName,\n                  country,\n                  city,\n                  province,\n                  postalCode,\n                  phoneNumber,\n                  address1,\n                  address2\n                })\n              } else {\n                formValidator(true)\n              }\n              \n              }}>continue</Button>\n        </div>\n      </Row>\n      {warningValidator(formIsValid)}\n    </Collapse>\n  </ListGroupItem>\n  </div>\n  )\n}\n\nCheckoutStepTwo.propTypes = propTypes;\n\nexport default CheckoutStepTwo;\n","import PropTypes from 'prop-types';\nimport React from 'react'\nimport { \n  Badge, \n  Button, \n  ListGroupItem, \n  Collapse,\n  Col,\n  Row\n} from 'reactstrap';\n\nconst propTypes = {\n  toggle: PropTypes.func.isRequired,\n  step3: PropTypes.bool.isRequired,  \n  step3Unlock: PropTypes.bool.isRequired, \n  getUserAddress: PropTypes.object.isRequired, \n  onSubmitOrder: PropTypes.func.isRequired\n};\n\nconst CheckoutStepThree = ({\n  styles,\n  step3,\n  step3Unlock,\n  toggle,\n  getUserAddress,\n  onSubmitOrder,\n  selectorTotalAmountCart,\n  totalDelivery\n}) => {\n\n  const { \n  address1,\n  address2,\n  city,\n  country,\n  firstName,\n  lastName,\n  phoneNumber,\n  postalCode,\n  province\n} = getUserAddress\n\n  return (\n    <div style={styles.collapsePannel}>\n      <ListGroupItem disabled={!step3} >\n          <h3 style={styles.collapasePannelTitle} onClick={()=>step3Unlock && toggle('step3')} >\n            <Badge color=\"secondary\" pill size='sm'>3</Badge>  Customer\n          </h3>\n        <Collapse isOpen={step3}>\n        <Row>\n          <Col md=\"6\">\n            <h4>Delivery address:</h4>\n            <div>First Name: <b>{firstName}</b></div>\n            <div>Last Name: <b>{lastName}</b></div>\n            <div>Tel: <b>{phoneNumber}</b></div>\n            <div>Country: <b>{country}</b></div>\n            <div>City: <b>{city}</b></div>\n            <div>State/Province: <b>{province}</b></div>\n            <div>Postal Code: <b>{postalCode}</b></div>\n            <div>Address: <b>{address1 + ' ' + address2}</b></div>\n          </Col>\n          <Col md=\"6\">\n          <h4>Payment: </h4>\n          </Col>\n        </Row>\n        </Collapse>\n      </ListGroupItem>\n    </div>\n  )\n}\n\nCheckoutStepThree.propTypes = propTypes;\n\nexport default CheckoutStepThree\n","import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport { ListGroup, ListGroupItem, Col, Row } from 'reactstrap';\r\n\r\nconst propTypes = { getCart: PropTypes.array.isRequired };\r\n\r\nconst CheckoutMiniSummary = ({ getCart, selectorTotalAmountCart, totalDelivery }) => (\r\n  <ListGroup>\r\n    <ListGroupItem>Order Summary</ListGroupItem>\r\n    <ListGroupItem>\r\n    {\r\n      getCart.map(x=> \r\n        <Row key={x._id}>\r\n          <Col xs='8'><p>x{x.quantity} {x.title}</p></Col>\r\n          <Col xs='4'><p>{x.price}$</p></Col>\r\n        </Row>\r\n      )\r\n    }\r\n    </ListGroupItem>\r\n    <ListGroupItem>\r\n      <Row>\r\n        <Col xs='8'><p>Subtotal</p></Col>\r\n        <Col xs='4'><p>{selectorTotalAmountCart}$</p></Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs='8'><p>Shipping</p></Col>\r\n        <Col xs='4'><p>{totalDelivery}$</p></Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs='8'><p>Tax</p></Col>\r\n        <Col xs='4'><p>0$</p></Col>\r\n      </Row>\r\n    </ListGroupItem>\r\n    <ListGroupItem>\r\n      <Row>\r\n        <Col xs='8'><p>Total</p></Col>\r\n        <Col xs='4'><b style={{fontSize: '25px'}}>{selectorTotalAmountCart+totalDelivery}$</b></Col>\r\n      </Row>\r\n    </ListGroupItem>\r\n  </ListGroup>\r\n);\r\n\r\nCheckoutMiniSummary.propTypes = propTypes;\r\n\r\nexport default CheckoutMiniSummary;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport CheckoutStepOne from './Checkout-step-one';\r\nimport CheckoutStepTwo from './Checkout-step-two';\r\nimport CheckoutStepThree from './Checkout-step-three';\r\nimport CheckoutMiniSummary from '../components/Checkout-mini-summary';\r\nimport { \r\n  Row, \r\n  Col, \r\n  Container, \r\n  Progress, \r\n  ListGroup\r\n} from 'reactstrap';\r\n\r\nconst propTypes = {\r\n  getCart: PropTypes.array.isRequired,\r\n  addUserAddress: PropTypes.func.isRequired,\r\n  getUserAddress: PropTypes.object.isRequired,  \r\n  step1: PropTypes.bool.isRequired,  \r\n  step2: PropTypes.bool.isRequired,  \r\n  step3: PropTypes.bool.isRequired,  \r\n  step2Unlock: PropTypes.bool.isRequired,  \r\n  step3Unlock: PropTypes.bool.isRequired, \r\n  email: PropTypes.string.isRequired, \r\n  firstName: PropTypes.string.isRequired, \r\n  lastName: PropTypes.string.isRequired, \r\n  country: PropTypes.string.isRequired, \r\n  city: PropTypes.string.isRequired, \r\n  province: PropTypes.string.isRequired, \r\n  postalCode: PropTypes.number.isRequired, \r\n  phoneNumber: PropTypes.number.isRequired, \r\n  address1: PropTypes.string.isRequired, \r\n  address2: PropTypes.string.isRequired, \r\n  shippingMethod: PropTypes.number.isRequired,\r\n  formIsValid: PropTypes.bool.isRequired,\r\n  onChangeFirstName: PropTypes.func.isRequired,\r\n  onChangeLastName: PropTypes.func.isRequired,\r\n  onChangeCountry: PropTypes.func.isRequired,\r\n  onChangeCity: PropTypes.func.isRequired,\r\n  onChangeProvince: PropTypes.func.isRequired,\r\n  onChangePostalCode: PropTypes.func.isRequired,\r\n  onChangePhoneNumber: PropTypes.func.isRequired,\r\n  onChangeAdress1: PropTypes.func.isRequired,\r\n  onChangeAdress2: PropTypes.func.isRequired,\r\n  onChangeShipppingMethod: PropTypes.func.isRequired,\r\n  onChangeEmail: PropTypes.func.isRequired,\r\n  toggle: PropTypes.func.isRequired,\r\n  stepsUnlock: PropTypes.func.isRequired,\r\n  formValidator: PropTypes.func.isRequired,\r\n  onSubmitOrder: PropTypes.func.isRequired\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    paddingTop: '120px', \r\n    paddingBottom: '120px'\r\n  },\r\n  h1: {\r\n    paddingBottom: '20px'\r\n  },\r\n  collapsePannel: {\r\n    borderBottom: '1px solid grey' \r\n  },\r\n  collapasePannelTitle: {\r\n    cursor: 'pointer'\r\n  },\r\n  formFieldsSpace: {\r\n    paddingTop: '10px'\r\n  }\r\n}\r\n\r\nconst CheckoutContainer = ({\r\n  getCart, \r\n  addUserAddress, \r\n  getUserAddress,       \r\n  step1, \r\n  step2, \r\n  step3, \r\n  step2Unlock, \r\n  step3Unlock, \r\n  email, \r\n  firstName, \r\n  lastName, \r\n  country, \r\n  city, \r\n  province, \r\n  postalCode, \r\n  phoneNumber, \r\n  address1, \r\n  address2, \r\n  shippingMethod,\r\n  formIsValid,\r\n  onChangeFirstName,\r\n  onChangeLastName,\r\n  onChangeCountry,\r\n  onChangeCity,\r\n  onChangeProvince,\r\n  onChangePostalCode,\r\n  onChangePhoneNumber,\r\n  onChangeAdress1,\r\n  onChangeAdress2,\r\n  onChangeShipppingMethod,\r\n  onChangeEmail,\r\n  toggle,\r\n  stepsUnlock,\r\n  formValidator,\r\n  emailIsValid,\r\n  handleEmailValidation,\r\n  onSubmitOrder,\r\n  selectorTotalAmountCart,\r\n  totalDelivery\r\n}) => (\r\n  <div>\r\n    <Progress value={ step3Unlock ? 100 : step2Unlock ? 66 :  33} />\r\n    <Container style={styles.container}>\r\n    <h1 style={styles.h1}>Check out</h1>\r\n      <Row>\r\n        <Col md='8'>\r\n          <ListGroup flush >\r\n            <CheckoutStepOne \r\n              styles={styles} \r\n              email={email} \r\n              emailIsValid={emailIsValid}\r\n              handleEmailValidation={handleEmailValidation}\r\n              onChangeEmail={onChangeEmail}\r\n              stepsUnlock={stepsUnlock}\r\n              step1={step1}\r\n              step2={step2}\r\n              step2Unlock={step2Unlock}\r\n              toggle={toggle}\r\n            />\r\n            <CheckoutStepTwo \r\n              styles={styles} \r\n              stepsUnlock={stepsUnlock}\r\n              step2={step2}\r\n              step2Unlock={step2Unlock}\r\n              toggle={toggle}\r\n              onChangeFirstName={onChangeFirstName}\r\n              onChangeLastName={onChangeLastName}\r\n              onChangeCountry={onChangeCountry}\r\n              onChangeCity={onChangeCity}\r\n              onChangeProvince={onChangeProvince}\r\n              onChangePostalCode={onChangePostalCode}\r\n              onChangePhoneNumber={onChangePhoneNumber}\r\n              onChangeAdress1={onChangeAdress1}\r\n              onChangeAdress2={onChangeAdress2}\r\n              onChangeShipppingMethod={onChangeShipppingMethod}\r\n              email={email}\r\n              firstName={firstName}\r\n              lastName={lastName}\r\n              country={country}\r\n              city={city}\r\n              province={province}\r\n              postalCode={postalCode}\r\n              phoneNumber={phoneNumber}\r\n              address1={address1}\r\n              address2={address2}\r\n              shippingMethod={shippingMethod}\r\n              formValidator={formValidator}\r\n              formIsValid={formIsValid}\r\n              addUserAddress={addUserAddress}\r\n            />\r\n            <CheckoutStepThree \r\n              styles={styles}\r\n              step3={step3}\r\n              step3Unlock={step3Unlock}\r\n              toggle={toggle}\r\n              getUserAddress={getUserAddress}\r\n              onSubmitOrder={onSubmitOrder}\r\n              selectorTotalAmountCart={selectorTotalAmountCart}\r\n              totalDelivery={totalDelivery}\r\n            />\r\n          </ListGroup>\r\n        </Col>    \r\n        <Col md='4'>\r\n          <CheckoutMiniSummary \r\n            getCart={getCart} \r\n            selectorTotalAmountCart={selectorTotalAmountCart}\r\n            totalDelivery={totalDelivery}\r\n          />\r\n        </Col>      \r\n      </Row>\r\n    </Container>\r\n  </div>\r\n);\r\n\r\nCheckoutContainer.propTypes = propTypes;\r\n\r\nexport default CheckoutContainer;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { selectorTotalAmountCart } from '../selectors/selector_list_statistics';\r\nimport Checkout from '../components/Checkout';\r\nimport { addUserAddress } from '../actions/UsersActions';\r\n\r\nclass CheckoutContainer extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      step1: true,\r\n      step2: false,\r\n      step2Unlock: false,\r\n      step3: false,\r\n      step3Unlock: false,\r\n      email: '',\r\n      emailIsValid: true,\r\n      firstName: 'fgsfdsf',\r\n      lastName: 'fsdfsd',\r\n      country: 'USA',\r\n      city: 'fdsfdsfdsf',\r\n      province: 'fdsfdsf',\r\n      postalCode: 8767671167,\r\n      phoneNumber: 17671651,\r\n      address1: 'qdfsqfdsqfcfdxsf',\r\n      address2: 'xsfdsxfsdfxsdf',\r\n      shippingMethod: 2,\r\n      formIsValid: false,\r\n      totalDelivery: 5\r\n    }\r\n  };\r\n\r\n  onChangeEmail = e => this.setState({ email: e.target.value});\r\n  onChangeFirstName = e => this.setState({ firstName: e.target.value });\r\n  onChangeLastName = e => this.setState({ lastName: e.target.value });\r\n  onChangeCountry = e => this.setState({ country: e.target.value });\r\n  onChangeCity = e => this.setState({ city: e.target.value });\r\n  onChangeProvince = e => this.setState({ province: e.target.value });\r\n  onChangePostalCode = e => this.setState({ postalCode: Number(e.target.value) });\r\n  onChangePhoneNumber = e => this.setState({ phoneNumber: Number(e.target.value) });\r\n  onChangeAdress1 = e => this.setState({ address1: e.target.value });\r\n  onChangeAdress2 = e => this.setState({ address2: e.target.value });\r\n  onChangeShipppingMethod = shippingMethod => this.setState({ shippingMethod });\r\n  handleEmailValidation = emailIsValid => this.setState({ emailIsValid });\r\n  formValidator = formIsValid => this.setState({ formIsValid });\r\n\r\n  toggle = step => {\r\n    step === 'step1' ? this.setState({ \r\n      step1: true,\r\n      step2: false,\r\n      step3: false\r\n    }) : \r\n    step === 'step2' ? this.setState({ \r\n      step1: false,\r\n      step2: true,\r\n      step3: false\r\n    }) :\r\n    step === 'step3' && this.setState({ \r\n      step1: false,\r\n      step2: false,\r\n      step3: true\r\n    }) \r\n  };\r\n\r\n  stepsUnlock = step => {\r\n    step === 'step2' ? this.setState({ step2Unlock: true, step1: false, step2: true, step3: false }) :\r\n    step === 'step3' && this.setState({ step3Unlock: true, step1: false, step2: false, step3: true })\r\n  };\r\n\r\n  onSubmitOrder = () => {\r\n    const { email, firstName, lastName, country, city, province, postalCode, phoneNumber, address1, address2, totalDelivery } = this.state;\r\n    const { getCart, selectorTotalAmountCart } = this.props;\r\n    const ref = Math.random().toString(36).substring(5)+ Date.now();\r\n    axios.post('/api/add/orders', {\r\n      ref,\r\n      customerinfo: {email, firstName, lastName, country, city, province, postalCode, phoneNumber, address1, address2},\r\n      order: getCart.map(x => ({idItem: x._id, titleItem:x.title, selectedSize:x.selectedSize, selectedColor:x.selectedColor, price:x.price, quantity:x.quantity})), \r\n      totalDelivery,\r\n      totalAmount: selectorTotalAmountCart\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <Checkout \r\n        {...this.state} \r\n        {...this.props} \r\n        onChangeFirstName={this.onChangeFirstName}\r\n        onChangeLastName={this.onChangeLastName}\r\n        onChangeCountry={this.onChangeCountry}\r\n        onChangeCity={this.onChangeCity}\r\n        onChangeProvince={this.onChangeProvince}\r\n        onChangePostalCode={this.onChangePostalCode}\r\n        onChangePhoneNumber={this.onChangePhoneNumber}\r\n        onChangeAdress1={this.onChangeAdress1}\r\n        onChangeAdress2={this.onChangeAdress2}\r\n        onChangeShipppingMethod={this.onChangeShipppingMethod}\r\n        stepsUnlock={this.stepsUnlock}\r\n        toggle={this.toggle}\r\n        onChangeEmail={this.onChangeEmail}\r\n        handleEmailValidation={this.handleEmailValidation}\r\n        formValidator={this.formValidator}\r\n        onSubmitOrder={this.onSubmitOrder}\r\n      />\r\n      </div>\r\n\r\n    )\r\n  }\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({ \r\n  getCart: state.cartReducer,\r\n  getUserAddress: state.getUserAddress,\r\n  selectorTotalAmountCart: selectorTotalAmountCart(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addUserAddress: x => dispatch(addUserAddress(x))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutContainer);\r\n\r\n","import { \n\tUSER_ADDRESS\n} from '../constants.js';\n\nexport const addUserAddress = infoUser => ({\n\ttype: USER_ADDRESS,\n\tinfoUser\t\n});\n"],"sourceRoot":""}